/*!
    \page gettingstarted.html
    \title QtCommercial Charts getting started
    \keyword Introduction

    You can obtain the QtCommercial Charts package from \l {http://www.digia.com/en/Qt/Log-in-Customer-Portal/} {Customer portal}.

    Compiling:
    \code
    qmake CONFIG+=release
    make
    make install
    \endcode

    Depending on the OS and the compiler you are using "make" might need to be replaced with another command like: nmake, mingw32-make, etc.

    On Windows platforms both debug and release configurations are built by default at the same time.
    To build both at the same time on other platforms invoke the following command:

    \code
    make all
    \endcode

    Compiling as a static library (lib only):
    \code
    qmake CONFIG+=staticlib
    make
    make install
    \endcode

    \bold {New project}

    Create a new project in a usual way and then add to your project's *.pro file following line:

    \code
    CONFIG += qtcommercialchart
    \endcode

    Or if you have not installed charts after building:

    \code
    CHARTSLIB = QtCommercialChart
    CONFIG(debug, debug|release) {
        mac: CHARTSLIB = $$join(CHARTSLIB,,,_debug)
        win32: CHARTSLIB = $$join(CHARTSLIB,,,d)
    }
    INCLUDEPATH += <path_to_charts_folder>/include
    LIBS += -L<path_to_charts_folder>/lib -l$$CHARTSLIB
    \endcode

    \bold {Widget project}

    To use the QCharts classes add QtCommercialChart namespace macro in your header file.
    \code
        #include<QWidget>
        #include<QChartView>

        QTCOMMERCIALCHART_USE_NAMESPACE

        class ExampleWidget : public QWidget
    \endcode

    \bold {QML project}

    Add an import line to your *.qml file:
    \code
        import QtCommercial.Chart 1.0
    \endcode

    \raw HTML
    \endraw
    
*/
