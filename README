--------------------------------
Commercial Charts Add-on 1.1.0
--------------------------------

What's in Qt Commercial Charts
=============================

Directory structure:

src/
    Source code of the Qt Commercial Charts
plugins/
    QML bindings plugin and QtCreator plugin
examples/
    Some examples of using Qt Commercial Charts
demos/
    More versatile example applications showing how to customize charts,
    combine several chart types and implement interaction in charts
doc/
    Documentation
licenses/
    Licensing information

Building
========
Please note that if you have already installed a previous version of
QtCommercial Charts, you should first uninstall it with
    make uninstall

Configure project with qmake and build project with make:
    (Linux) make 
    (Windows with MinGw) mingw32-make
    (Visual Studio) nmake
    (OSX) make

For debug builds:
    qmake CONFIG+=debug; make
    or 
    qmake CONFIG+=debug_and_release; make debug
    
For release builds:    
    qmake CONFIG+=release ; make
    or 
    qmake CONFIG+=debug_and_release; make release
    
For both builds
    qmake CONFIG+="debug_and_release build_all"; make

If you want to install the libraries to your Qt library directory use:
    make install

If you want to uninstall the libraries
    make uninstall

Building as a statically linked library
=======================================

The same as above applies you will just have to add staticlib to the CONFIG:
    qmake CONFIG+=staticlib

Documentation
=============
Documentation can be found from doc/html directory. The documentation
can also be generated with:
    make docs

Main Changes between 1.0.0 and 1.1.0
===================================
- Versions 1.0.0 and 1.1.0 are not binary or source compatible. We are sorry about this.
- Horizontal bar series has been added
- New axis types: DateTimeAxis and CategoryAxis
- PieSeries now supports drawing as a donut
- ValuesAxis renamed to ValueAxis
- BarCategoriesAxis renamed to BarCategoryAxis
- Drawing performance of LineSeries has been improved
- New data replacament method with better performance implemented in XYSeries
- It is now possible to take PieSlices/BarSets back from the series without deleting
- Build issues with Embedded Linux on ARM fixed
- Several new examples and demos
- QML Axis APIs and series handling in ChartView API improved
- Improved QML API: new borders/lines related properties for series
- ChartView margins are now configured via minimumMargins property
- QML API version number changed to 1.1
- You can now set a custom format for ValueAxis labels
- ValueAxis label layout improved

Bug Fixes
==========
- Fixed: When a spline series is cleared then the first points still end up being drawn
- Fixed nice numbers algorithm issue with zoom
- Fixed configuration issues with debug_and_release and build_all flags
- Fixed setting color for a BarSet label
- Fixed bar series autoscaling with negative values
- Fixed build issue on OSX caused by an extra space in a LIBS definition
- Switched the z-order of series to be on top of axis
- The pen of legend marker now matches the color of legend label
- Fixed initializing the color of a PieSlice and border color of a ScatterSeris in QML
- Antialias is now disabled in declarative plugin by default
- Fixed QML PieModelMappers defined outside the series scope
- Fixed an issue with QLegend attach requiring a resize

Known Issues
============
- Automatic scaling of the axes is only done when you add a series on a chart
- If adding several axes, automatic scaling is done based on the last axis added
- Only one Y and X axis can be visible at the same time
- Unit label for axes is not implemented
- Switching off OpenGL (after using a QGLWidget as a viewport) causes a crash in OSX
- Setting minimum margins breaks down the layout in some cases
- DateTimeAxis is not supported on ARM because of floating point precision
  issues (qreals are floats)
- Declarative plugin is available from Qt 4.7.4 onwards because of missing
  Q_REVISION macro in the earlier Qt releases
- Fixed BarSet.remove in QML API
